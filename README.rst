hts-demo-en-US-cmudict-aridity
==============================

This repository contains a version of the US English
`HTS demo <http://hts.sp.nitech.ac.jp/?Download>`_ which has been modified to
support some additional features (see below for a list of modifications).
The HTS demos are designed to demonstrate the capabilities of the
`HMM-based Speech Synthesis System (HTS) <http://hts.sp.nitech.ac.jp/>`_ for
statistical parametric speech synthesis.

Overview
--------

Starting from a corpus of text data and speech audio data from a human speaker,
this software trains a statistical parametric speech synthesis system designed to
imitate that speaker.
This trained system can then be used to synthesize speech audio for new pieces
of text data.

The text data may be provided in one of two forms:

- as simple text files
- as utterance files generated by
  `Festival <http://www.cstr.ed.ac.uk/projects/festival/>`_
  using the same phoneme set used by the
  `CMU Pronouncing Dictionary <http://www.speech.cs.cmu.edu/cgi-bin/cmudict>`_

The speech data should be provided in the form of 48 kHz 16-bit mono wav files.

Modifications from the official version
---------------------------------------

This repository contains modifications from the official version of the
US English `HTS demo <http://hts.sp.nitech.ac.jp/?Download>`_.
Some majorish differences include:

- changes to the default values of some ``configure`` variables:

  - use STRAIGHT vocoder by default (USESTRAIGHT)
  - use 50 mceps (instead of 35) by default (MGCORDER)
  - don't use modulation spectrum-based generation by default (USEMSPF)

- changes to the default settings in ``scripts/Config.pm.in``:

  - use an MDL tuning factor of 0.6 for mgc stream (instead of 1.0) by default
    (may result in better quality speech)

- the simple form of energy normalization applied to training waveforms (when
  STRAIGHT is used) in the official version of the HTS demo is disabled in this
  repository.
  See below for suggested instructions of how to perform energy normalization of
  training waveforms if desired.
- it computes test set log probability on a specified test corpus

Some minor differences include:

- it does not include a corpus of text data and speech data for training the
  synthesis system.
  The corpus of data used by the official version is based on the
  `CMU ARCTIC corpus for speaker SLT <http://festvox.org/cmu_arctic/dbs_slt.html>`_
  and may obtained by downloading the official version of the
  US English HTS demo from the
  `HTS demo website <http://hts.sp.nitech.ac.jp/?Download>`_.
- the speech data should be provided in a wav rather than raw format.
  If necessary conversion may be done using SPTK's ``raw2wav`` tool.
- it adds this README file
- it adds the ``License`` file
- it removes the ``configure`` script since a suitable script can be automatically
  generated from the provided ``configure.ac`` file using ``autoconf``.
  This follows standard version control practices.
- when USEUTT is 0, generated utterance files are stored in ``data/utts`` rather
  than being discarded
- it uses an explicitly specified list of training corpus and generation corpus
  utterance ids rather than trying to autodetect what files are present in a
  given directory
- for the generation corpus, it generates from text or utterances files rather
  than from pre-specified label files
- clustering of all streams is performed throughout, whereas the official version
  disables clustering of the ``bap`` stream for the first of the two clusterings
  (this is done because it saves disk space and allows intermediate models to be
  used for synthesis)
- a bit more information is written to the log file during decision tree
  clustering, and a bit less during global variance generation
- forced alignments are produced at several stages of training
- untied models are removed after use, saving disk space
- various minor fixes and changes

License
-------

Please see the file ``License`` for details of the license and warranty for
hts-demo-en-US-cmudict-aridity.

Installation
------------

The source code is hosted in the
`hts-demo-en-US-cmudict-aridity github repository <https://github.com/MattShannon/hts-demo-en-US-cmudict-aridity>`_.
To obtain the latest source code using git::

    git clone git://github.com/MattShannon/hts-demo-en-US-cmudict-aridity.git

hts-demo-en-US-cmudict-aridity depends on the following software packages:

- `Festival <http://www.cstr.ed.ac.uk/projects/festival/>`_
  (for the ``dumpfeats`` script)
- `Speech Processing Toolkit (SPTK) <http://sourceforge.net/projects/sp-tk/>`_
- `HMM-based Speech Synthesis System (HTS) <http://hts.sp.nitech.ac.jp/>`_
- `hts_engine API <http://hts-engine.sourceforge.net/>`_
  (if synthesis using HTS engine rather than HTS's HMGenS tool is desired)

The versions of these software packages required can be found in ``INSTALL``.

If STRAIGHT vocoding is used (recommended for better quality, though it is not
available under a permissive license) then the following software packages are
also required:

- `STRAIGHT vocoder <http://www.wakayama-u.ac.jp/~kawahara/STRAIGHTadv/index_e.html>`_
- `MATLAB <http://www.mathworks.com/products/matlab/>`_
  (to run the STRAIGHT vocoder)

There are two high-level choices that need to be made when setting-up this
directory:

- whether to provide the text data for your desired corpus as simple text files
  (in which case the ``configure`` variable USEUTT should be set to 0) or as
  Festival utterance files (in which case USEUTT should be set to 1).
  Using Festival utterance files is the default.
- whether to use the STRAIGHT vocoder (in which case the ``configure`` variable
  USESTRAIGHT should be set to 1) or the non-STRAIGHT vocoder (in which case
  USESTRAIGHT should be set to 0).
  Using the STRAIGHT vocoder is the default.

To set-up this directory for your desired corpus using the
`CMU Pronouncing Dictionary <http://www.speech.cs.cmu.edu/cgi-bin/cmudict>`_
phoneme set and the default fullcontext label format:

- if USEUTT is 0, add text files for your desired corpus in ``data/txt``.
  Make sure that the default festival voice produces utterance files which use
  the ``cmudict`` phoneme set.
- if USEUTT is 1, add Festival utterance files for your desired corpus in
  ``data/utts``.
  Make sure that the utterance files use the ``cmudict`` phoneme set.
- add 48 kHz 16-bit mono wav files for your desired corpus in ``data/wav``
- optionally, apply energy normalization to the audio data, for example using
  the ``sv56demo`` tool included in the collection of
  `ITU G.191 software tools <http://www.itu.int/rec/T-REC-G.191-201003-I/en>`_.
  Synthesized waveforms may momentarily have signal values outside the range
  encountered in the training corpus.
  Care should therefore be taken to ensure that the training waveforms have
  sufficient headroom that a non-pathological synthesized voice is unlikely to
  clip (e.g. by passing ``-lev -24`` to ``sv56demo``).
- decide on a split of your corpus into a training corpus and a test corpus and
  put appropriate lists of utterance ids in ``data/corpus-train.lst`` and
  ``data/corpus-test.lst``.
  For example ``data/corpus-train.lst`` might contain::

        cmu_us_arctic_slt_a0001
        cmu_us_arctic_slt_a0002
        cmu_us_arctic_slt_a0004
        ...

  for the CMU ARCTIC corpus.
  The test corpus is used to compute objective metrics such as test set log
  probability (and can be empty if desired).
- take a subset of utterance ids from the test corpus as the generation corpus
  specified in ``data/corpus-gen.lst``.
  You may also include new utterance ids not present in the training corpus or
  test corpus, in which case you should add the appropriate text or utterance
  files to ``data/txt`` or ``data/utts``.
  The training scripts automatically generate synthetic waveforms for utterances
  in the generation corpus.
  There is no need for utterances in the generation corpus to have waveforms in
  ``data/wav``.
- generate the ``configure`` script from ``configure.ac`` using ``autoconf``
- follow the instructions for the official version included in ``INSTALL``,
  setting the USEUTT and USESTRAIGHT ``configure`` variables appropriately.
  You may also wish to:

  - set the LOWERF0 and UPPERF0 ``configure`` variables to appropriate values
    for the F0 range of the speaker
  - set the DATASET and SPEAKER ``configure`` variables, though these are only
    used in a handful of non-essential places

Using a different phoneme set
-----------------------------

Using a different phoneme set or fullcontext label format requires more extensive
changes, including at least:

- if USEUTT is 0, ensure the default festival voice produces utterance files which
  use the desired phoneme set
- if USEUTT is 0, optionally check that the simple text normalization done by
  ``data/scripts/normtext.pl`` is appropriate
- if USEUTT is 1, process the text data into festival utterance files which use
  the desired phoneme set
- change the utt-to-lab step to produce label files in the desired fullcontext
  label format.
  The code which runs the utt-to-lab step is in ``data/Makefile.in`` and uses the
  following files:

  - ``data/scripts/extra_feats.scm``
  - ``data/scripts/label.feats``
  - ``data/scripts/label-mono.awk``
  - ``data/scripts/label-full.awk``

- change the question set files in ``data/questions`` to be appropriate for the
  desired phoneme set and fullcontext label format
- optionally you may wish to change the FULLCONTEXT_FORMAT, FULLCONTEXT_VERSION
  and QNUM ``configure`` variables
- (then follow the relevant parts of the instructions given above)

Bugs
----

Bugs specifically about this modified version of the HTS demo can be submitted to the
`issue tracker <https://github.com/MattShannon/hts-demo-en-US-cmudict-aridity/issues>`_.
Please use the `HTS users mailing list <mailto:hts-users@sp.nitech.ac.jp>`_ to
submit bugs related to the original version of US English HTS demo after verifying
that the bug still occurs with the most recent official version available from the
`HTS demo website <http://hts.sp.nitech.ac.jp/?Download>`_.

Contact
-------

The author of the US English HTS demo is the HTS working group.
More information is available on the `HTS website <http://hts.sp.nitech.ac.jp/>`_
and from the `HTS users mailing list <mailto:hts-users@sp.nitech.ac.jp>`_.
The subsequent modifications for hts-demo-en-US-cmudict-aridity were made by
`Matt Shannon <mailto:matt.shannon@cantab.net>`_.
